name: Deploy to Production

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    
    - name: Run type check
      run: pnpm type-check
    
    - name: Run linting
      run: pnpm lint
    
    - name: Build application
      run: pnpm build
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        PINECONE_API_KEY: ${{ secrets.PINECONE_API_KEY }}
        PINECONE_INDEX: ${{ secrets.PINECONE_INDEX }}
        PINECONE_ENV: ${{ secrets.PINECONE_ENV }}
        PINECONE_REGION: ${{ secrets.PINECONE_REGION }}
        VAPI_API_KEY: ${{ secrets.VAPI_API_KEY }}
        VAPI_ASSISTANT_ID: ${{ secrets.VAPI_ASSISTANT_ID }}

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    
    - name: Build application
      run: pnpm build
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        PINECONE_API_KEY: ${{ secrets.PINECONE_API_KEY }}
        PINECONE_INDEX: ${{ secrets.PINECONE_INDEX }}
        PINECONE_ENV: ${{ secrets.PINECONE_ENV }}
        PINECONE_REGION: ${{ secrets.PINECONE_REGION }}
        VAPI_API_KEY: ${{ secrets.VAPI_API_KEY }}
        VAPI_ASSISTANT_ID: ${{ secrets.VAPI_ASSISTANT_ID }}
    
    # Add deployment steps for your preferred platform
    # Example for Vercel:
    # - name: Deploy to Vercel
    #   uses: amondnet/vercel-action@v25
    #   with:
    #     vercel-token: ${{ secrets.VERCEL_TOKEN }}
    #     vercel-org-id: ${{ secrets.ORG_ID }}
    #     vercel-project-id: ${{ secrets.PROJECT_ID }}
    #     vercel-args: '--prod' 